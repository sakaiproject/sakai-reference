-- SAK-48106
UPDATE user_audits_log audits INNER JOIN SAKAI_USER_ID_MAP idmap ON audits.user_id = idmap.eid SET audits.user_id = idmap.user_id;
UPDATE user_audits_log audits INNER JOIN SAKAI_USER_ID_MAP idmap ON audits.action_user_id = idmap.eid SET audits.action_user_id = idmap.user_id;
-- END SAK-48106

-- S2U-12 --
ALTER TABLE sam_itemfeedback_t MODIFY TEXT LONGTEXT;
ALTER TABLE sam_publisheditemfeedback_t MODIFY TEXT LONGTEXT;
-- End S2U-12 --

-- S2U-42 --
CREATE TABLE CARDGAME_STAT_ITEM (
  ID VARCHAR2(99 CHAR) NOT NULL,
  PLAYER_ID VARCHAR2(99 CHAR) NOT NULL,
  USER_ID VARCHAR2(99 CHAR) NOT NULL,
  HITS NUMBER(5,0) NOT NULL,
  MISSES NUMBER(5,0) NOT NULL,
  MARKED_AS_LEARNED NUMBER(1,0) NOT NULL,
  PRIMARY KEY(ID)
);

CREATE INDEX IDX_CARDGAME_STAT_ITEM_PLAYER_ID ON CARDGAME_STAT_ITEM (ID, PLAYER_ID);
-- END S2U-42 --

-- S2U-27 --
ALTER TABLE MFR_OPEN_FORUM_T ADD IS_FAQ_FORUM NUMBER(1,0) DEFAULT 0 NOT NULL;
ALTER TABLE MFR_TOPIC_T ADD IS_FAQ_TOPIC NUMBER(1,0) DEFAULT 0 NOT NULL;
-- END S2U-27 --

-- S2U-34 --
-- IMPORTANT: This index must be deleted and may have a different name, maybe UK_dn0jue890jn9p7vs6tvnsf2gf or similar
DROP INDEX UKdn0jue890jn9p7vs6tvnsf2gf;
CREATE UNIQUE INDEX UKqsk75a24pi108jpybtt16hshv ON RBC_EVALUATION (EVALUATED_ITEM_OWNER_ID, EVALUATED_ITEM_ID, ASSOCIATION_ID);
UPDATE rbc_evaluation SET evaluated_item_owner_id = SUBSTR(evaluated_item_owner_id, -36) where evaluated_item_owner_id like '/site/%';
-- END S2U-34 --

-- S2U-11 --
ALTER TABLE SAM_ITEMTEXT_T ADD ADDEDBUTNOTEXTRACTED NUMBER(1,0) DEFAULT 0 NOT NULL;
ALTER TABLE SAM_PUBLISHEDITEMTEXT_T ADD ADDEDBUTNOTEXTRACTED NUMBER(1,0) DEFAULT 0 NOT NULL;
-- End S2U-11 --

-- S2U-39 --
CREATE TABLE rwikipagegroups (
    rwikiobjectid VARCHAR2(36) NOT NULL,
    groupid VARCHAR2(99) NOT NULL
)
-- END S2U-39 --

-- S2U-23 --
ALTER TABLE SAM_PUBLISHEDFEEDBACK_T ADD SHOWCORRECTION NUMBER(1,0) DEFAULT 0 NOT NULL;
ALTER TABLE SAM_ASSESSFEEDBACK_T ADD SHOWCORRECTION NUMBER(1,0) DEFAULT 0 NOT NULL;
-- END S2U-23 --

-- S2U-29 --
alter table MFR_PVT_MSG_USR_T add READ_RECEIPT NUMBER(1,0) DEFAULT null;
-- END S2U-29 --

-- SAK-49591 --
CREATE TABLE SAM_ITEMHISTORICAL_T (
  ITEMHISTORICALID NUMBER(19,0) NOT NULL,
  ITEMID NUMBER(19,0) NOT NULL,
  MODIFIEDBY VARCHAR2(255) NOT NULL,
  MODIFIEDDATE TIMESTAMP (6) WITH TIME ZONE NOT NULL,
  PRIMARY KEY(ITEMHISTORICALID)
);

CREATE SEQUENCE SAM_ITEMHISTORICAL_ID_S MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE NOKEEP NOSCALE GLOBAL;
CREATE INDEX SAM_ITEMHISTORICAL_ITEMID_I ON SAM_ITEMHISTORICAL_T (ITEMID) 
ALTER TABLE SAM_ITEMHISTORICAL_T ADD CONSTRAINT FK_ITEMHISTORICAL_ITEM FOREIGN KEY (ITEMID) REFERENCES SAM_ITEM_T (ITEMID) ENABLE;
-- END SAK-49591 --

-- S2U-32 and S2U-28 --
CREATE TABLE tagservice_tagassociation (
  id varchar2(99) NOT NULL,
  tag_id varchar2(255) NOT NULL,
  item_id varchar2(255) NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT UK7tc7vcvcb0bw8moqdu3giik6o UNIQUE (tag_id,item_id)
);
ALTER TABLE tagservice_tag MODIFY taglabel VARCHAR2(255 CHAR);

-- Permission added in 12 might not be present 
INSERT IGNORE INTO SAKAI_REALM_FUNCTION (FUNCTION_NAME) VALUES ('tagservice.manage');
-- Add this for every role able to create and manage tags on a site, you'll need to add the tool too
INSERT INTO SAKAI_REALM_RL_FN VALUES((select REALM_KEY from SAKAI_REALM where REALM_ID = '!site.template'), (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = 'maintain'), (select FUNCTION_KEY from SAKAI_REALM_FUNCTION where FUNCTION_NAME = 'tagservice.manage'));
INSERT INTO SAKAI_REALM_RL_FN VALUES((select REALM_KEY from SAKAI_REALM where REALM_ID = '!site.template.course'), (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = 'Instructor'), (select FUNCTION_KEY from SAKAI_REALM_FUNCTION where FUNCTION_NAME = 'tagservice.manage'));
INSERT INTO SAKAI_REALM_RL_FN VALUES((select REALM_KEY from SAKAI_REALM where REALM_ID = '!site.template.course'), (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = 'Teaching Assistant'), (select FUNCTION_KEY from SAKAI_REALM_FUNCTION where FUNCTION_NAME = 'tagservice.manage'));
-- Add this to populate existing sites with the permission
CREATE TABLE PERMISSIONS_SRC_TEMP (ROLE_NAME VARCHAR(99), FUNCTION_NAME VARCHAR(99));
INSERT INTO PERMISSIONS_SRC_TEMP VALUES ('maintain','tagservice.manage');
INSERT INTO PERMISSIONS_SRC_TEMP VALUES ('Instructor','tagservice.manage');
INSERT INTO PERMISSIONS_SRC_TEMP VALUES ('Teaching Assistant','tagservice.manage');

CREATE TABLE PERMISSIONS_TEMP (ROLE_KEY INTEGER, FUNCTION_KEY INTEGER);
INSERT INTO PERMISSIONS_TEMP (ROLE_KEY, FUNCTION_KEY)
SELECT SRR.ROLE_KEY, SRF.FUNCTION_KEY
FROM PERMISSIONS_SRC_TEMP TMPSRC
JOIN SAKAI_REALM_ROLE SRR ON (TMPSRC.ROLE_NAME = SRR.ROLE_NAME)
JOIN SAKAI_REALM_FUNCTION SRF ON (TMPSRC.FUNCTION_NAME = SRF.FUNCTION_NAME);

INSERT INTO SAKAI_REALM_RL_FN (REALM_KEY, ROLE_KEY, FUNCTION_KEY)
SELECT
    SRRFD.REALM_KEY, SRRFD.ROLE_KEY, TMP.FUNCTION_KEY
FROM
    (SELECT DISTINCT SRRF.REALM_KEY, SRRF.ROLE_KEY FROM SAKAI_REALM_RL_FN SRRF) SRRFD
    JOIN PERMISSIONS_TEMP TMP ON (SRRFD.ROLE_KEY = TMP.ROLE_KEY)
    JOIN SAKAI_REALM SR ON (SRRFD.REALM_KEY = SR.REALM_KEY)
    WHERE SR.REALM_ID != '!site.helper' AND SR.REALM_ID NOT LIKE '!user.template%'
    AND NOT EXISTS (
        SELECT 1
            FROM SAKAI_REALM_RL_FN SRRFI
            WHERE SRRFI.REALM_KEY=SRRFD.REALM_KEY AND SRRFI.ROLE_KEY=SRRFD.ROLE_KEY AND SRRFI.FUNCTION_KEY=TMP.FUNCTION_KEY
    );

DROP TABLE PERMISSIONS_TEMP;
DROP TABLE PERMISSIONS_SRC_TEMP;
-- END S2U-32 and S2U-28 --
